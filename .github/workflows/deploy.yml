name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository에 올린 파일들을 불러오기
        #repository에 올린 코드를 불러오는 라이브러리
        uses: actions/checkout@v4

      - name: JDK 17버전 설치
        #자바 설치 라이브러리
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: application.yml파일 만들기
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.yml

      - name: 테스트 및 빌드하기(1)
        rum: chmod +x ./gradlew

      - name: 테스트 및 빌드하기(2)
        rum: ./gradlew clean build


      - name: 빌드된 파일 이름 변경하기
        run: mv ./build/libs/*SNAPSHOT.jar ./project.jar

      - name: SCP로 EC2에 빌드된 파일 전송하기
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{secrets.EC2_HOST}}
          username: ${{secrets.EC2_USERNAME}}
          key: ${{secrets.EC2_PRIVATE_KEY}}
          source: project.jar
          target: /home/ubuntu/ToyBoard-server/tobe


      - name: SSH로 EC2에 접속하기
        #어떤 라이브러리를 사용할건지
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          #sudo fuser -k -n tcp 8080 || true -> 8080포트가 사용중이지 않아도 에러가 발생하지 않게 하기
          # 2>&1 명령어가 실패해도 파일에 넣고 실패해도 파일에 넣는다
          script: |
            rm -rf /home/ubuntu/ToyBoard-server/current
            mkdir /home/ubuntu/ToyBoard-server/current
            mv /home/ubuntu/ToyBoard-server/tobe/project.jar /home/ubuntu/ToyBoard-server/current/project.jar
            cd /home/ubuntu/ToyBoard-server/current
            sudo fuser -k -n tcp 8080 || true
            nohup java -jar project.jar > ./output.log 2>&1 &
            rm -rf /home/ubuntu/ToyBoard-server/tobe
         
            
