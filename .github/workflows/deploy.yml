name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository에 올린 파일들을 불러오기
        #repository에 올린 코드를 githubaction컴퓨터로 불러오는 라이브러리
        uses: actions/checkout@v4

      - name: JDK 17버전 설치
        #자바 설치 라이브러리
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      #application.yml파일은 gitignore로 해뒀기 때문에 만들어서 넣어줌 (소스는 이미 가져와 있는건가?)
      - name: application.yml파일 만들기
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.yml

      - name: 테스트 및 빌드하기 - gradlew 실행권한 주기 및 실행
        run: |
          chmod +x ./gradlew
          ./gradlew clean build
        

      - name: 빌드된 파일 이름 변경하기
        run: mv ./build/libs/*SNAPSHOT.jar ./project.jar

      - name: 압축하기
        #project.jar, appspec.yml, scripts폴더를 묶어서 커밋ID.tar.gz로 압축
        run: tar -czvf $GITHUB_SHA.tar.gz project.jar appspec.yml scripts

      - name: AWS resource에 접근할 수 있게 AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      #aws로 아시아지역의 s3로 커밋ID.tar.gz파일을  //toy-board-server/경로에 커밋ID.tar.gz로 업로드
      - name: S3에 프로젝트 폴더 업로드하기
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.tar.gz s3://toy-board-server/$GITHUB_SHA.tar.gz

      - name: Code Deploy를 활용해 EC2에 프로젝트 코드 배포
        #aws deploy create-deployment #deploy 배포생성하는 코드
        #application-name toyboard-server #deploy에 만들어둔 애플리케이션 이름
        #deployment-config-name CodeDeployDefault.AllAtOnce #모든걸 한번에 교체 (여러개를 한번에 교체하는 방식) 인스턴스가 여러개라면 다른방식도 필요 (여러개를 차근차근)
        #deployment-group-name production #aws CodeDeployy 애플리케이션에서 만들어둔 배포그룹이름
        #s3-location bucket=toy-board-server,bundleType=tgz,key=$GITHUB_SHA.tar.gz #aws에 만들어둔 버킷이름 입력 //버킷이름, 파일형식, 파일이름
        run: aws deploy create-deployment
          --application-name toyboard-server
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name production
          --s3-location bucket=toy-board-server,bundleType=tgz,key=$GITHUB_SHA.tar.gz


            
